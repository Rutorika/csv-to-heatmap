!function(){"use strict";angular.module("csvToHeatmap",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngMessages","ui.router","ui.bootstrap","toastr","ui-leaflet"])}(),function(){"use strict";function e(e){return{restrict:"A",require:"?ngModel",link:function(t,n,l,i){function o(){var t=new FileReader,l=n.get(0).files[0];t.onload=function(){var n=new e(t.result,{header:!0});i.$setViewValue(n.parse())},t.readAsText(l)}function a(){i.$setValidity("required",""!=n.val())}i&&(a(),n.on("change",function(){a(),t.$evalAsync(o)}))}}}e.$inject=["CSV"],angular.module("csvToHeatmap").directive("csvReader",e)}(),function(){"use strict";function e(e,t,n,l){function i(){m.header=Object.keys(m.csvRows[0]),m.latitudeColumn=null,m.longitudeColumn=null,m.filterByColumn=null,m.filterOptions=null,m.filterOptionsSelected=null}function o(e){if(e.$valid)if(null!==m.filterOptionsSelected){var t=m.csvRows.filter(function(e){return l.contains(m.filterOptionsSelected,e[m.filterByColumn])});a(t)}else a(m.csvRows)}function a(e){t.getMap().then(function(t){g&&t.removeLayer(g),g=new n.TileLayer.WebGLHeatMap(m.heatmapOptions),e.forEach(function(e){var t=r(e);g.addDataPoint.apply(g,t)}),t.addLayer(g)})}function s(){m.filterByColumn&&(m.filterOptions=l.uniq(l.pluck(m.csvRows,m.filterByColumn)).sort(),m.filterOptionsSelected=angular.copy(m.filterOptions))}function r(e){return[e[m.latitudeColumn],e[m.longitudeColumn],m.pointIntensity]}function c(e){return l.contains(m.filterOptionsSelected,e)}function u(e){l.contains(m.filterOptionsSelected,e)?m.filterOptionsSelected=l.without(m.filterOptionsSelected,e):m.filterOptionsSelected.push(e)}function d(e){m.filterOptionsSelected=angular.copy(e)}var m=this;m.csvRows=[],m.pointIntensity=8,m.header=[],m.latitudeColumn=null,m.longitudeColumn=null,m.filterByColumn=null,m.filterOptions=null,m.filterOptionsSelected=null,m.csvChanged=i,m.filterByColumnChanged=s,m.renderHeatmap=o,m.isFilterSelected=c,m.toggleFilterSelected=u,m.setFilterSelected=d,m.map={center:{lat:42.34,lng:-71.1,zoom:11},defaults:{},layers:{baselayers:{googleRoadmap:{name:"Google Streets",layerType:"ROADMAP",type:"google"}}}},m.heatmapOptions={size:750,autoresize:!0};var g}e.$inject=["$log","leafletData","L","_"],angular.module("csvToHeatmap").controller("MainController",e)}(),function(){"use strict";function e(e){e.debug("runBlock end")}e.$inject=["$log"],angular.module("csvToHeatmap").run(e)}(),function(){"use strict";function e(e,t){e.state("home",{url:"/",templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"Main"}),t.otherwise("/")}e.$inject=["$stateProvider","$urlRouterProvider"],angular.module("csvToHeatmap").config(e)}(),function(){"use strict";angular.module("csvToHeatmap").constant("CSV",CSV).constant("L",L).constant("_",_).constant("moment",moment)}(),function(){"use strict";function e(e,t){e.debugEnabled(!0),t.allowHtml=!0,t.timeOut=3e3,t.positionClass="toast-top-right",t.preventDuplicates=!1,t.progressBar=!1}e.$inject=["$logProvider","toastrConfig"],angular.module("csvToHeatmap").config(e)}(),angular.module("csvToHeatmap").run(["$templateCache",function(e){e.put("app/main/main.html",'<div class="row"><div class="col-md-8" style="margin-bottom: 2em;"><leaflet defaults="Main.map.defaults" layers="Main.map.layers" lf-center="Main.map.center" height="400px" width="100%"></leaflet><div ng-if="Main.filterByColumn" style="margin: 1em 0;"><a class="btn btn-default btn-sm" ng-click="Main.setFilterSelected(Main.filterOptions)">Select all</a> <a class="btn btn-default btn-sm" ng-click="Main.setFilterSelected([])">Select none</a></div><table class="table table-condensed table-hover" ng-if="Main.filterByColumn"><tbody><tr ng-repeat="filterValue in Main.filterOptions" ng-click="Main.toggleFilterSelected(filterValue)" style="cursor: pointer" class="no-text-select"><td style="width: 1%"><i class="glyphicon glyphicon-unchecked" ng-show="!Main.isFilterSelected(filterValue)"></i> <i class="glyphicon glyphicon-check" ng-show="Main.isFilterSelected(filterValue)"></i></td><td>{{ ::filterValue }}</td><td></td></tr></tbody></table></div><div class="col-md-4" style="margin-bottom: 2em;"><form name="csvForm" ng-submit="Main.renderHeatmap(csvForm)"><div class="form-group" ng-class="{\'has-error\': csvForm.$submitted && csvForm.csv.$invalid}"><label class="control-label" for="csv">CSV File</label> <input ng-model="Main.csvRows" type="file" name="csv" ng-change="Main.csvChanged()" csv-reader="" id="csv"><div ng-messages="csvForm.csv.$error" ng-show="csvForm.$submitted"><div ng-messages-include="error-messages"></div></div></div><div class="form-group"><label class="control-label" for="intensity">Point intensity (%)</label> <input type="number" name="intensity" min="0" max="100" ng-model="Main.pointIntensity" class="form-control" id="intensity"></div><div class="form-group"><label class="control-label" for="radius">Point radius (meters)</label> <input name="radius" type="number" min="0" max="10000" ng-model="Main.heatmapOptions.size" class="form-control" id="radius"></div><div class="form-group" ng-class="{\'has-error\': csvForm.$submitted && csvForm.latitudeColumn.$invalid}"><label class="control-label" for="latitudeColumn">Latitude column</label><select name="latitudeColumn" class="form-control" ng-model="Main.latitudeColumn" required="" id="latitudeColumn"><option ng-repeat="headerName in Main.header">{{ headerName }}</option></select><div ng-messages="csvForm.latitudeColumn.$error" ng-show="csvForm.$submitted"><div ng-messages-include="error-messages"></div></div></div><div class="form-group" ng-class="{\'has-error\': csvForm.$submitted && csvForm.longitudeColumn.$invalid}"><label class="control-label" for="longitudeColumn">Longitude column</label><select name="longitudeColumn" class="form-control" ng-model="Main.longitudeColumn" required="" id="longitudeColumn"><option ng-repeat="headerName in Main.header">{{ headerName }}</option></select><div ng-messages="csvForm.longitudeColumn.$error" ng-show="csvForm.$submitted"><div ng-messages-include="error-messages"></div></div></div><div class="form-group"><label class="control-label" for="filterByColumn">Filter by column (optional)</label><select name="filterByColumn" class="form-control" ng-model="Main.filterByColumn" id="filterByColumn" ng-change="Main.filterByColumnChanged()"><option ng-repeat="headerName in Main.header">{{ headerName }}</option></select></div><button type="submit" class="btn btn-primary">Render heatmap</button></form></div></div>'),e.put("app/components/csv-reader/csv-reader.html",'<input type="file" name="csv">')}]);
//# sourceMappingURL=../maps/scripts/app-5ed43cae72.js.map
